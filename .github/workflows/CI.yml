name: CI
on:
  workflow_dispatch: ~
  pull_request:
    branches:
      - "master"
  push:
    branches:
      - "*"
    paths:
      - ".github/workflows/CI.yml"
      - "pixi.lock"
      - "pixi.toml"
      - "src/**"
      - "test/**"
      - "util/**"
defaults:
  run:
    shell: bash
env:
  JULIA_NUM_THREADS: auto,auto
jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    continue-on-error: ${{ github.ref_name == 'dev' }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest
        julia-version:
          - "min"
          - "lts"
          - "1"
          - "pre"
          - "1.12-nightly"
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: julia-actions/setup-julia@v2
        with:
          show-versioninfo: true
          version: ${{ matrix.julia-version }}
      - uses: julia-actions/julia-buildpkg@v1
        with:
          ignore-no-cache: true
          localregistry: https://github.com/0h7z/0hjl.git
      - uses: julia-actions/julia-runtest@v1
      - uses: heptazhou/julia-codecov@v1
      - uses: codecov/codecov-action@v4
        with:
          file: lcov.info
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  pixi:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    continue-on-error: ${{ github.ref_name == 'dev' }}
    strategy:
      fail-fast: false
      matrix:
        pixi-manifest:
          - pixi.toml
          - pyproject.toml
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - run: rm pixi.{toml,lock}
        if: ${{ matrix.pixi-manifest != 'pixi.toml' }}
      - uses: prefix-dev/setup-pixi@v0
        with:
          cache: false
      - run: pixi ls -x --color always
      - run: pixi run test --color yes
      - run: pixi run lcov
      - uses: codecov/codecov-action@v4
        with:
          file: util/lcov.info
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        if: ${{ matrix.pixi-manifest == 'pixi.toml' }}
      - run: pixi update -n --color always
